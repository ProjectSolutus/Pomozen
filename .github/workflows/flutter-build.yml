name: Build Flutter APK (FDroid Style)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build APK (no tests)
    runs-on: ubuntu-latest

    steps:
      - name: 🧾 Checkout repo
        uses: actions/checkout@v4

      - name: 🔧 Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.4'

      - name: 🧹 Patch Gradle for reproducible build
        run: |
          sed -r '/signingConfigs.getByName/d ; /create\("release"\) \{/,/        \}/d ; s/include\(".*/include\("arm64-v8a"\)/ ; s/isUniversalApk = true/isUniversalApk = false/' -i android/app/build.gradle.kts

      - name: 📦 Install dependencies
        run: flutter pub get

      - name: 🛠️ Build release APK
        run: flutter build apk --release

      - name: 🔍 Find APK path
        id: find_apk
        run: |
          OUT=$(find build -name "app-*-release.apk" | grep "arm64" || true)
          if [ -z "$OUT" ]; then
            echo "❌ APK not found after build"
            exit 1
          fi
          echo "Found APK: $OUT"
          echo "apk_path=$OUT" >> $GITHUB_OUTPUT

      - name: 📥 Clone reproducible-apk-tools
        run: git clone -b v0.3.0 https://github.com/obfusk/reproducible-apk-tools.git

      - name: 🧪 Fix APK metadata
        run: |
          python3 reproducible-apk-tools/inplace-fix.py --internal --page-size 16 fix-newlines "${{ steps.find_apk.outputs.apk_path }}" 'META-INF/services/*'
          mkdir -p outputs
          mv "${{ steps.find_apk.outputs.apk_path }}" outputs/unsigned.apk

      - name: 📤 Upload APK Artifact (5-day retention)
        uses: actions/upload-artifact@v4
        with:
          name: unsigned-apk
          path: outputs/unsigned.apk
          retention-days: 5

      - name: 🧼 Clean up
        run: |
          rm -rf build .dart_tool .pub-cache reproducible-apk-tools outputs
